setwd("C:/Users/fkaus/OneDrive/문서/China")
order1501=read.csv("Order1501.csv",header = T)
order1501=read.csv("Order1501.csv",header = T)
order1502=read.csv("Order1502.csv",header = T)
order1503=read.csv("Order1503.csv",header = T)
order1504=read.csv("Order1504.csv",header = T)
order1505=read.csv("Order1505.csv",header = T)
order1506=read.csv("Order1506.csv",header = T)
order1507=read.csv("Order1507.csv",header = T)
order1508=read.csv("Order1508.csv",header = T)
order1509=read.csv("Order1509.csv",header = T)
order1510=read.csv("Order1510.csv",header = T)
order1511=read.csv("Order1511.csv",header = T)
order1512=read.csv("Order1512.csv",header = T)
order1501=order1501[!complete.cases(order1501$CancelCode)&order1501$ItemType=="TAN",]
order1502=order1502[!complete.cases(order1502$CancelCode)&order1502$ItemType=="TAN",]
order1503=order1503[!complete.cases(order1503$CancelCode)&order1503$ItemType=="TAN",]
order1504=order1504[!complete.cases(order1504$CancelCode)&order1504$ItemType=="TAN",]
order1505=order1505[!complete.cases(order1505$CancelCode)&order1505$ItemType=="TAN",]
order1506=order1506[!complete.cases(order1506$CancelCode)&order1506$ItemType=="TAN",]
order1507=order1507[!complete.cases(order1507$CancelCode)&order1507$ItemType=="TAN",]
order1508=order1508[!complete.cases(order1508$CancelCode)&order1508$ItemType=="TAN",]
order1509=order1509[!complete.cases(order1509$CancelCode)&order1509$ItemType=="TAN",]
order1510=order1510[!complete.cases(order1510$CancelCode)&order1510$ItemType=="TAN",]
order1511=order1511[!complete.cases(order1511$CancelCode)&order1511$ItemType=="TAN",]
order1512=order1512[!complete.cases(order1512$CancelCode)&order1512$ItemType=="TAN",]
#-------------------------------------------------------------------------------------------------------
order1501
#-------------------------------------------------------------------------------------------------------
order1501
order1508$MarketPriceAmt=as.numeric(order1508$MarketPriceAmt)
order1508$OrderQty=as.integer(order1508$OrderQty)
주문경소상수.1월=length(unique(order1501$SoldToParty))
주문경소상수.2월=length(unique(order1502$SoldToParty))
주문경소상수.3월=length(unique(order1503$SoldToParty))
주문경소상수.4월=length(unique(order1504$SoldToParty))
주문경소상수.5월=length(unique(order1505$SoldToParty))
주문경소상수.6월=length(unique(order1506$SoldToParty))
주문경소상수.7월=length(unique(order1507$SoldToParty))
주문경소상수.8월=length(unique(order1508$SoldToParty))
주문경소상수.9월=length(unique(order1509$SoldToParty))
주문경소상수.10월=length(unique(order1510$SoldToParty))
주문경소상수.11월=length(unique(order1511$SoldToParty))
주문경소상수.12월=length(unique(order1512$SoldToParty))
m1=matrix(c(주문경소상수.1월,주문경소상수.2월,주문경소상수.3월,주문경소상수.4월,주문경소상수.5월,주문경소상수.6월,주문경소상수.7월,주문경소상수.8월,주문경소상수.9월,주문경소상수.10월,주문경소상수.11월,주문경소상수.12월))
colnames(m1)=c("주문경소상수(명)")
rownames(m1)=c("1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월")
View(m1)
#-------------------------------------------------------------------------------------------------------
order1501
delivery1501=read.csv("Delivery1501.csv",header = T)
delivery1501=read.csv("Delivery1501.csv",header = T)
delivery1502=read.csv("Delivery1502.csv",header = T)
delivery1503=read.csv("Delivery1503.csv",header = T)
delivery1504=read.csv("Delivery1504.csv",header = T)
delivery1505=read.csv("Delivery1505.csv",header = T)
delivery1506=read.csv("Delivery1506.csv",header = T)
delivery1507=read.csv("Delivery1507.csv",header = T)
delivery1508=read.csv("Delivery1508.csv",header = T)
delivery1509=read.csv("Delivery1509.csv",header = T)
delivery1510=read.csv("Delivery1510.csv",header = T)
delivery1511=read.csv("Delivery1511.csv",header = T)
delivery1512=read.csv("Delivery1512.csv",header = T)
autoparts<-read.csv("autoparts.csv",header=TRUE)
setwd("D:/BigDataCampus")
autoparts<-read.csv("autoparts.csv",header=TRUE)
autoparts1<-autoparts[autoparts$prod_no=="90784-76001",c(2:11)]
autoparts2<-autoparts1[autoparts1$c_thickness<1000,]
autoparts2$y_faulty<-ifelse((autoparts2$c_thickness<20)|(autoparts2$c_thickness>32),1,0)
t_index<-sample(1:norw(autoaprts2),size=nrow(autoparts2)*0.7)
t_index<-sample(1:nrow(autoaprts2),size=nrow(autoparts2)*0.7)
train<-autoparts2[t_index,]
test<-autoparts2[-t_index,]
xmat.train<-as.matrix(train[1:9])
y_faulty.train<-train$y_faulty
train
xmat.train
y_faulty.train<-train$y_faulty
xmat.test<-as.matrix(test[1:9])
head(xmat.test)
install.packages("class")
library(class)
yhat_test<-knn(xmat.train,xmat.test,as.factor(y_faulty.train),k=3)
yhat_test
table<-table(real=test$y_faulty,predict=yhat_test)
table
(table[1,1]+table[2,2])/sum(table)
library(e1071)
tune.out<-tune.knn(x=xmat.train,y=as.factor(y_faulty.train),k=1:10); tune.out
plot(tune.out)
yhat_test<-knn(xmat.train.xmat.test,y_faulty.train,k=5)
yhat_test<-knn(xmat.train,xmat.test,y_faulty.train,k=5)
table<-table(real=test$y_faulty,predict=yhat_test)
table
accuarcy<-(table[1,1]+table[2,2])/sum(table)
accuarcy
ROC(test=yhat_test,stat=test$y_faulty,plot="ROC",AUC=T,main="KNN")
new.data<-data.frame(fix_time=87,a_speed=0.609,b_speed=1.715,separation=242.7,s_separation=657.5,rate_terms=95,mpa=78,load_time=18.1,highpressure_time=82)
knn(xmat.train,new.data,y_faulty.train,k=5)
new.data<-data.frame(fix_time=c(87,85.6),a_speed=c(0.609,0.472),b_speed=c(1.715,1.685),separation=c(242.7,243.4),s_separation=c(657.5,657.9),rate_terms=c(95,95),mpa=c(78,28.8),load_time=c(18.1,18.2),highpressure_time=c(82,60))
knn(xmat.train,new.data,y_faulty.train,k=5)
autoparts<-read.csv("autoparts.csv",header=TRUE)
autoparts1<-autoparts[autoparts$prod_no=="90784-76001",c(2:11)]
autoparts2<-autoparts1[autoparts1$c_thickness<1000,]
autoaprts2$g_class<-as.factor(ifelse(autoparts2$c_thickness<20,1,ifelse(autoparts2$c_thickness<32,2,3)))
t_index<-sample(1:nrow(autoparts2),size=nrow(autoparts2)*0.7)
train<-autoparts2[t_index,]
test<-autoparts2[-t_index,]
xmat.train<-as.matrix(train[1:9])
g_class.train<-train$g_class
xmat.test<-as.matrix(test[1:9])
library(class)
yhat_test<-knn(xmat.train,xmat.test,g_class.train,k=3)
autoparts<-read.csv("autoparts.csv",header=TRUE)
autoparts1<-autoparts[autoparts$prod_no=="90784-76001",c(2:11)]
autoparts2<-autoparts1[autoparts1$c_thickness<1000,]
autoaprts2$g_class<-as.factor(ifelse(autoparts2$c_thickness<20,1,ifelse(autoparts2$c_thickness<32,2,3)))
t_index<-sample(1:nrow(autoparts2),size=nrow(autoparts2)*0.7)
train<-autoparts2[t_index,]
test<-autoparts2[-t_index,]
xmat.train<-as.matrix(train[1:9])
g_class.train<-train$g_class
xmat.test<-as.matrix(test[1:9])
yhat_test<-knn(xmat.train,xmat.test,g_class.train,k=3)
yhat_test<-knn(xmat.train,xmat.test,g_class.train,k=5)
yhat_test<-knn(xmat.train,xmat.test,g_class.train,k=3)
yhat_test<-knn(xmat.train,xmat.test,g_class.train,k=3)
xmat.train<-as.matrix(train[1:9])
g_class.train<-train$g_class
xmat.test<-as.matrix(test[1:9])
yhat_test<-knn(xmat.train,xmat.test,g_class.train,k=3)
table<-table(real=test$g_class,predict=yhat_test); table
autoparts<-read.csv("autoparts.csv",header=TRUE)
autoparts1<-autoparts[autoparts$prod_no=="90784-76001",c(2:11)]
autoparts2<-autoparts1[autoparts1$c_thickness<1000,]
autoaprts2$g_class<-as.factor(ifelse(autoparts2$c_thickness<20,1,ifelse(autoparts2$c_thickness<32,2,3)))
t_index<-sample(1:nrow(autoparts2),size=nrow(autoparts2)*0.7)
train<-autoparts2[t_index,]
test<-autoparts2[-t_index,]
xmat.train<-as.matrix(train[1:9])
g_class.train<-train$g_class
xmat.test<-as.matrix(test[1:9])
yhat_test<-knn(xmat.train,xmat.test,g_class.train,k=3)
autoparts<-read.csv("autoparts.csv",header=TRUE)
autoparts<-read.csv("autoparts.csv",header=TRUE)
autoparts1<-autoparts[autoparts$prod_no=="90784-76001",c(2:11)]
autoparts2<-autoparts1[autoparts1$c_thickness<1000,]
autoparts2$g_class<-as.factor(ifelse(autoparts2$c_thickness<20,1ifelse(autoparts2$c_thickness<32,2,3)))
autoparts2$g_class<-as.factor(ifelse(autoparts2$c_thickness<20,1,ifelse(autoparts2$c_thickness<32,2,3)))
t_index<-sample(1:nrow(autoparts2),size=nrow(autoparts2)*0.7)
train<-autoparts2[t_index,]
test<-autoparts2[-t_index,]
xmat.train<-as.matrix(train[1:9])
c_thickness.train<-train$c_thickness
xmat.test<-as.matrix(test[1:9])
install.packages("FNN")
library(FNN)
yhat_test<-knn.reg(xmat.train,xmat.test,c_thickness.train,k=3)
mse<-mean((yhat_test$pred-test$c_thickness)^2)
mse
yhat_test<-knn.reg(xmat.train,xmat.test,c_thickness.train,k=5)
mse<-mean((yhat_test$pred-test$c_thickness)^2)
mse
knn(xmat.train,new.data,g_class.train,k=5)
new.data<-data.frame(fix_time=87,a_speed=0.609,b_speed=1.715,separation=242.7,s_separation=657.5,rate_terms=98,mpa=78,load_time=18.1,highpressure_time=82)
knn(xmat.train,new.data,c_thickness.train,k=3)
knn.reg(xmat.train,new.data,c_thickness.train,k=3)
new.data<-data.frame(fix_time=c(87,88),a_speed=c(0.609,0.68),b_speed=c(1.715,2.1),separation=c(242.7,250.1),s_separation=c(657.5,667),rate_terms=c(98,99),mpa=(78,70),load_time=(18.1,19),highpressure_time=c(82,81)
new.data<-data.frame(fix_time=c(87,88),a_speed=c(0.609,0.68),b_speed=c(1.715,2.1),separation=c(242.7,250.1),s_separation=c(657.5,667),rate_terms=c(98,99),mpa=(78,70),load_time=(18.1,19),highpressure_time=c(82,81))
new.data<-data.frame(fix_time=c(87,88),a_speed=c(0.609,0.68),b_speed=c(1.715,2.1),separation=c(242.7,250.1),s_separation=c(657.5,667),rate_terms=c(98,99),mpa=(78,70),load_time=(18.1,19),highpressure_time=c(82,81)))
new.data<-data.frame(fix_time=c(87,88),a_speed=c(0.609,0.68),b_speed=c(1.715,2.1),separation=c(242.7,250.1),s_separation=c(657.5,667),rate_terms=c(98,99),mpa=(78,70),load_time=(18.1,19),highpressure_time=c(82,81)
new.data<-data.frame(fix_time=c(87,88),a_speed=c(0.609,0.68),b_speed=c(1.715,2.1),separation=c(242.7,250.1),s_separation=c(657.5,667),rate_terms=c(98,99),mpa=c(78,79),load_time=(18.1,19),highpressure_time=c(82,81)
new.data<-data.frame(fix_time=c(87,88),a_speed=c(0.609,0.68),b_speed=c(1.715,2.1),separation=c(242.7,250.1),s_separation=c(657.5,667),rate_terms=c(98,99),mpa=c(78,79),load_time=(18.1,19),highpressure_time=c(82,81))
new.data<-data.frame(fix_time=c(87,88),a_speed=c(0.609,0.68),b_speed=c(1.715,2.1),separation=c(242.7,250.1),s_separation=c(657.5,667),rate_terms=c(98,99),mpa=c(78,79),load_time=c(18.1,19.5),highpressure_time=c(82,81))
knn.reg(xmat.train,new.data,c_thickness.train,k=3)
View(m1)
library(dplyr)
주문건수.1월<-order1501 %>% group_by(SoldToParty) %>% summarise(주문건수.1월=length(table(SapID)))
주문건수.1월월
주문건수.1월
주문건수.1월<-as.matrix(order1501 %>% group_by(SoldToParty) %>% summarise(주문건수.1월=length(table(SapID))))
주문건수.1월월
주문건수.1월
주문건수.1월<-as.matrix(order1501 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
sum(주문건수.1월$주문건수)
주문건수.1월<-as.data.frame(order1501 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.1월<-sum(주문건수.1월$주문건수)
주문건수.1월월
주문건수.1월
autoparts<-read.csv("autoparts.csv",header = T)
autoparts1<-autoparts[autoparts$prod_no=="90784-76001",c(2:11)]
autoparts2<-autoparts1[autoparts1$c_thickness<1000,]
autoparts2$g_class<-as.factor(ifelse(autoparts2$c_thickness<20,1,ifelse(autoparts2$c_thickness<32,2,3)))
t_index<-sample(1:nrow(autoparts2),size=nrow(autoparts2)*0.7)
train<-autoparts2[t_index,]
test<-autoparts2[-t_index,]
install.packages("nnet")
library(nnet)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
yhat_test<-predict(m,test,type="class")
table<-table(real=test$g_class,predict=yhat_test)
table
table
autoparts<-read.csv("autoparts.csv",header = T)
autoparts1<-autoparts[autoparts$prod_no=="90784-76001",c(2:11)]
autoparts2<-autoparts1[autoparts1$c_thickness<1000,]
autoparts2$g_class<-as.factor(ifelse(autoparts2$c_thickness<20,1,ifelse(autoparts2$c_thickness<32,2,3)))
t_index<-sample(1:nrow(autoparts2),size=nrow(autoparts2)*0.7)
train<-autoparts2[t_index,]
test<-autoparts2[-t_index,]
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
yhat_test<-predict(m,test,type="class")
table<-table(real=test$g_class,predict=yhat_test)
table
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
yhat_test<-predict(m,test,type="class")
table<-table(real=test$g_class,predict=yhat_test)
table
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
# size=10은 은닉층을 10개라고 지정합니다.
m<-nnet(g_class~fix_time+a_speed+b_speed+separation+s_separation+rate_terms+mpa+load_time+highpressure_time,data=train,size=10)
yhat_test<-predict(m,test,type="class")
table<-table(real=test$g_class,predict=yhat_test)
table
x1<-c(0,0,0)
table<-cbind(x1,table)
table
(table[1,1]+table[2,2]+table[3,3])/sum(table)
as.factor(yhat_test)
new.data<-data.frame(fix_time=c(87,85.6),a_speed=c(0.609,0.472),b_speed=c(1.715,1.685),separation=c(242.7,243.4),s_separation=c(657.5,657.9),rate_terms=c(95,95),mpa=c(78,28.8),load_time=c(18.1,18.2),highpressure_time=c(82,60))
predict(m,newdata=new.data,type="class")
Occupancy.test=read.csv("occupancy_test.csv",header = T)
Occupancy.train=read.csv("occupancy_train.csv",header=T)
head(Occupancy.train)
xmat<-as.matrix(Occupancy.train[2:5])
yvec<-Occupancy.train$Occupancy
library(glmnet)
fit.lasso<-glmnet(x=xmat,y=yvec,alpha=1,nlambda = 100)
fit.lasso.cv<-cv.glmnet(x=xmat,y=yvec,nfolds=10,alpha=1,lambda=fit.lasso$lambda)
plot(fit.lasso.cv)
fit.lasso.param<-fit.lasso.cv$lambda.min
fit.lasso.tune<-glmnet(x=xmat,y=yvec,alpha = 1,lambda=fit.lasso.param)
coef(fit.lasso.tune)
t_index<-sample(1:nrow(Occupancy.train),size=nrow(Occupancy.train)*0.7)
m<-tree(factor(Occupancy)~Temperature+Humidity+Light+CO2+HumidityRatio,data=Occupancy.train)
plot(m)
test(m)
text(m)
plot(m)
text(m)
yhat_test<-predict(m,Occupancy.test,type="class")
table<-table(real=Occupancy.test$Occupancy,predict=yhat_test)
table
ROC(test=yhat_test,stat=Occupancy.test$Occupancy,plot="ROC",AUC=T,main="TREE")
yhat_test<-knn(Occupancy.train,Occupancy.test,as.factor(Occupancy.train),k=3)
yhat_test
table<-table(real=Occupancy.test$Occupancy,predict=yhat_test);table
(table[1,1]+table[2,2])/sum(table)
tune.out<-tune.knn(x=Occupancy.train,y=as.factor(Occupancy.train),k=1:10)
tune.out<-tune.knn(x=Occupancy.train, y=as.factor(Occupancy.train),k=1:10)
tune.out<-tune.knn(x=Occupancy.train, y=as.factor(Occupancy.train),k=1:10)
ROC(test=yhat_test,stat=Occupancy.test$Occupancy,plot="ROC",AUC=T,main="TREE")
library(e1071)
tune.out<-tune.knn(x=xmat.train,y=as.factor(occupationalStatus),k=1:10)
yhat_test<-knn(Occupancy.train,Occupancy.test,as.factor(Occupancy.train),k=3)
yhat_test
table<-table(real=Occupancy.test$Occupancy,predict=yhat_test);table
(table[1,1]+table[2,2])/sum(table)
occupancy_all <- read.csv("occupancy_all.csv")
occupancy_train <- read.csv("occupancy_train.csv")
occupancy_test <- read.csv("occupancy_test.csv")
head(occupancy_train,0)
omat <- as.matrix(occupancy_train[2:5])
head(omat)
ovec <- occupancy_train$Occupancy
head(ovec)
library(glmnet)
fit.lasso <- glmnet(x= omat, y = ovec, alpha=1, nlambda = 100, family = "binomial")
fit.lasso.cv <- cv.glmnet(x= omat, y = ovec, nfolds = 10, alpha = 1, lambda = fit.lasso$lambda, family = "binomial")
plot(fit.lasso.cv)
fit.lasso.param <- fit.lasso.cv$lambda.1se # 이걸 개인적으로 선호
fit.lasso.param2 <- fit.lasso.cv$lambda.min
fit.lasso.tune <- glmnet(x=omat, y = ovec, alpha =1, lambda = fit.lasso.param, family ="binomial")
coef(fit.lasso.tune)
occupancy_train <- occupancy_train[,c(2,4,5,7)]
head(occupancy_train)
library(tree)
m <- tree(factor(Occupancy)~ Temperature + Light + CO2 , data = occupancy_train)
plot(m)
text(m)
prune.m <- prune.tree(m, method = "misclass")
plot(prune.m)
## 위를 바탕으로 다시 피팅
prune.m <- prune.tree(m, best = 2)
plot(prune.m)
text(prune.m)
yhat_test <- predict(prune.m, occupancy_test, type="class")
table <- table(real = occupancy_test$Occupancy, predict = yhat_test); table
(table[1,1]+table[2,2])/sum(table)
library(Epi)
ROC(test = yhat_test, stat = occupancy_test$Occupancy, plot="ROC", AUC = T, main = "TREE")
# 연습문제 2
xmat.train <- as.matrix(occupancy_train[1:3])
occupancy.train <- occupancy_train$Occupancy
xmat.test <- as.matrix(occupancy_test[c(2,4,5)])
head(xmat.test)
library(class)
yhat_test <- knn(xmat.train, xmat.test, as.factor(occupancy.train),k=3)
table <- table(real = occupancy_test$Occupancy, predict = yhat_test);table
(table[1,1]+table[2,2])/sum(table)
ROC(test = yhat_test, stat = occupancy_test$Occupancy, plot="ROC", AUC = T, main = "TREE")
library(e1071)
tune.out <- tune.knn(x=xmat.train, y = as.factor(occupancy.train), k = 1:10); tune.out
plot(tune.out)
yhat_test <- knn(xmat.train, xmat.test, as.factor(occupancy.train),k=7)
table <- table(real = occupancy_test$Occupancy, predict = yhat_test);table
(table[1,1]+table[2,2])/sum(table)
주문건수.1월<-as.data.frame(order1501 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.1월<-sum(주문건수.1월$주문건수)
주문건수.2월<-as.data.frame(order1502 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.2월<-sum(주문건수.2월$주문건수)
주문건수.3월<-as.data.frame(order1503 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.3월<-sum(주문건수.3월$주문건수)
주문건수.4월<-as.data.frame(order1504 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.4월<-sum(주문건수.4월$주문건수)
주문건수.5월<-as.data.frame(order1505 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.5월<-sum(주문건수.5월$주문건수)
주문건수.6월<-as.data.frame(order1506 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.6월<-sum(주문건수.6월$주문건수)
주문건수.7월<-as.data.frame(order1507 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.7월<-sum(주문건수.7월$주문건수)
주문건수.8월<-as.data.frame(order1508 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.8월<-sum(주문건수.8월$주문건수)
주문건수.9월<-as.data.frame(order1509 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.9월<-sum(주문건수.9월$주문건수)
주문건수.10월<-as.data.frame(order1510 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.10월<-sum(주문건수.10월$주문건수)
주문건수.11월<-as.data.frame(order1511 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.11월<-sum(주문건수.11월$주문건수)
주문건수.12월<-as.data.frame(order1512 %>% group_by(SoldToParty) %>% summarise(주문건수=length(table(SapID))))
주문건수.12월<-sum(주문건수.12월$주문건수)
주문건수.1월
m2=matrix(c(주문건수.1월,주문건수.2월,주문건수.3월,주문건수.4월,주문건수.5월,주문건수.6월,주문건수.7월,주문건수.8월,주문건수.9월,주문건수.10월,주문건수.11월,주문건수.12월))
colnames(m2)=c("주문건수")
m2=matrix(c(주문건수.1월,주문건수.2월,주문건수.3월,주문건수.4월,주문건수.5월,주문건수.6월,주문건수.7월,주문건수.8월,주문건수.9월,주문건수.10월,주문건수.11월,주문건수.12월))
colnames(m2)=c("주문건수")
rownames(m1)=c("1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월")
View(m2)
colnames(m2)=c("주문건수(건)")
rownames(m2)=c("1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월")
View(m2)
order1501
주문금액.1월<-sum(order1501$MarketPriceAmt)
주문금액.1월
주문금액.1월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.1월월
주문금액.1월
주문금액.1월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.2월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.3월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.4월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.5월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.6월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.7월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.8월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.9월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.10월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.11월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.12월<-sum(order1501$MarketPriceAmt)/1000000
m3=matrix(c(주문금액.1월,주문금액.2월,주문금액.3월,주문금액.4월,주문금액.5월,주문금액.6월,주문금액.7월,주문금액.8월,주문금액.9월,주문금액.10월,주문금액.11월,주문금액.12월))
m3=matrix(c(주문금액.1월,주문금액.2월,주문금액.3월,주문금액.4월,주문금액.5월,주문금액.6월,주문금액.7월,주문금액.8월,주문금액.9월,주문금액.10월,주문금액.11월,주문금액.12월))
colnames(m2)=c("주문건수(건)")
rownames(m2)=c("1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월")
m3=matrix(c(주문금액.1월,주문금액.2월,주문금액.3월,주문금액.4월,주문금액.5월,주문금액.6월,주문금액.7월,주문금액.8월,주문금액.9월,주문금액.10월,주문금액.11월,주문금액.12월))
colnames(m2)=c("주문금액")
rownames(m2)=c("1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월")
View(m3)
주문금액.12월<-sum(order1512$MarketPriceAmt)/1000000
주문금액.1월<-sum(order1501$MarketPriceAmt)/1000000
주문금액.2월<-sum(order1502$MarketPriceAmt)/1000000
주문금액.3월<-sum(order1503$MarketPriceAmt)/1000000
주문금액.4월<-sum(order1504$MarketPriceAmt)/1000000
주문금액.5월<-sum(order1505$MarketPriceAmt)/1000000
주문금액.6월<-sum(order1506$MarketPriceAmt)/1000000
주문금액.7월<-sum(order1507$MarketPriceAmt)/1000000
주문금액.8월<-sum(order1508$MarketPriceAmt)/1000000
주문금액.9월<-sum(order1509$MarketPriceAmt)/1000000
주문금액.10월<-sum(order1510$MarketPriceAmt)/1000000
주문금액.11월<-sum(order1511$MarketPriceAmt)/1000000
주문금액.12월<-sum(order1512$MarketPriceAmt)/1000000
m3=matrix(c(주문금액.1월,주문금액.2월,주문금액.3월,주문금액.4월,주문금액.5월,주문금액.6월,주문금액.7월,주문금액.8월,주문금액.9월,주문금액.10월,주문금액.11월,주문금액.12월))
colnames(m2)=c("주문금액")
rownames(m2)=c("1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월")
View(m3)
order1501
order1501
table(order1501$OrderStatus)
# OrderStatus는 A,B,C  3가지 상태가 있습니다.
# table(order1501$OrderStatus)
table(order1501$DeliveryStatus)
Order1501[Order1501$OrderStatus=="C",15]
Order1501[OrderStatus=="C",15]
order1501[order1501$OrderStatus=="C",15]
order1501[order(order1501$OrderStatus=="C"),9]
sum(order1501[order(order1501$OrderStatus=="C"),9])
sum(order1502[order(order1502$OrderStatus=="C"),9])
sum(order1501[order(order1501$OrderStatus=="C"),9])
sum(order1502[order(order1502$OrderStatus=="C"),9])
sum(order1503[order(order1503$OrderStatus=="C"),9])
sum(order1504[order(order1504$OrderStatus=="C"),9])
sum(order1505[order(order1505$OrderStatus=="C"),9])
sum(order1506[order(order1506$OrderStatus=="C"),9])
sum(order1507[order(order1507$OrderStatus=="C"),9])
order1501%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1504%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1501%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1502%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1503%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1504%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1505%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1506%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1507%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1508%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1509%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1510%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1511%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1512%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1501%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1502%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1503%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1504%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1505%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1506%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1507%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1508%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1509%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1512%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1511%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1510%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1501%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1502%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1503%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1504%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1505%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1506%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1507%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1508%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1509%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1510%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1511%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1512%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1508
order1508
order1508
table(order1508$OrderStatus)
table(order1508$DeliveryStatus)
order1508 %>% filter(DeliveryStatus=="C")
sum(order1507[order(order1507$OrderStatus=="C"),9])
sum(order1508[order(order1507$OrderStatus=="C"),9])
sum(order1509[order(order1507$OrderStatus=="C"),9])
sum(order1510[order(order1507$OrderStatus=="C"),9])
sum(order1511[order(order1507$OrderStatus=="C"),9])
sum(order1512[order(order1507$OrderStatus=="C"),9])
order1512%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1511%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
order1510%>%filter(DeliveryStatus=="C")%>%summarise(sum(MarketPriceAmt))
